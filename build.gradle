plugins {
    id 'java'
    id("io.papermc.paperweight.userdev") version "1.7.1"
    id 'org.jetbrains.kotlin.jvm'
}

group = 'net.zaskamlen'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven({
        name = "jitpack-repo"
        url = "https://jitpack.io"
    })


}


dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.6-R0.1-SNAPSHOT"
    implementation("net.minestom:minestom-snapshots:33dff6f458")
    implementation("dev.hollowcube:polar:1.8.1")
    implementation("com.fasterxml.jackson.core:jackson-core:2.17.1")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.17.1")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.17.1")
    compileOnly "io.papermc.paper:paper-api:1.20.6-R0.1-SNAPSHOT"
    paperweight.paperDevBundle("1.20.6-R0.1-SNAPSHOT")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

def targetJavaVersion = 21
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
kotlin {
    jvmToolchain(21)
}
